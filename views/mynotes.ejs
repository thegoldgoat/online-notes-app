<html>

<head>
  <link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Myfiles</title>

  <script type="text/javascript">
    var backupNotes = new Array();
    function createNewNote() {
      var newnotediv = document.getElementById('newnotediv');
      newnotediv.style = 'display: block';
    }

    function hideNewNote() {
      document.getElementById('newnotediv').style.display = 'none';
      document.getElementById('newnotetitle').value = '';
      document.getElementById('newnotetext').value = '';
    }

    function sendNewNote() {
      var xhr = new XMLHttpRequest();
      xhr.open("POST", '/user/newnote', true);
      xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
      xhr.send('title=' + document.getElementById('newnotetitle').value + '&text=' + document.getElementById('newnotetext').value
      );
    }

    // Default note buttons
    function returnDefaultButtons(id) {
      var updateBut = document.createElement('button');
      updateBut.setAttribute('class', 'w3-button w3-yellow');
      updateBut.setAttribute('onclick', 'updateButtonClick("' + id + '");');
      updateBut.innerHTML = 'Modify';

      var removeBut = document.createElement('button');
      removeBut.setAttribute('class', 'w3-button w3-red');
      removeBut.setAttribute('onclick', 'deleteButtonClick("' + id + '");');
      removeBut.innerHTML = 'Delete';
      return { updateBut: updateBut, removeBut: removeBut };
    }

    function addReceivedNote(note) {
      // * Create a new note node
      // New note div
      var newNote = document.createElement('div');
      newNote.setAttribute('class', 'w3-card-4 w3-panel w3-sand');
      newNote.setAttribute('id', note.id);
      newNote.style.wordWrap = 'break-word';

      // Title node
      var title = document.createElement('b');
      title.setAttribute('class', 'w3-xxlarge');
      title.appendChild(document.createTextNode(note.title));

      // Text node
      var text = document.createElement('div');
      text.innerHTML = note.text;

      // Buttons
      var buttonsP = document.createElement('p');
      var defBut = returnDefaultButtons(note.id);
      buttonsP.appendChild(defBut.updateBut);
      buttonsP.appendChild(defBut.removeBut);

      // Append to newnote
      newNote.appendChild(title);
      newNote.appendChild(text);
      newNote.appendChild(buttonsP);

      // append to document
      document.getElementById('mynotes').appendChild(newNote);
    }

    function sendUpdateNote(id) {
      // Send the updated note to the database
      var noteDiv = document.getElementById(id);

      var titleValue = noteDiv.children[0].value;
      var textValue = noteDiv.children[1].value;

      var xhr = new XMLHttpRequest();
      xhr.open("POST", '/user/sendupdatednote', true);
      xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
      xhr.send('id=' + id + '&' + 'title=' + titleValue + '&' + 'text=' + textValue);

      // Remove that node
      noteDiv.parentElement.removeChild(noteDiv);
    }

    function cancelUpdateNote(id) {
      // Replace the inputs with the real note's values
      // then replace the buttons
      var noteDiv = document.getElementById(id);

      var titleDiv = document.createElement('b');
      titleDiv.className = 'w3-xxlarge';
      titleDiv.innerText = backupNotes[id].title;
      var textDiv = document.createElement('div');
      textDiv.innerText = backupNotes[id].text;

      backupNotes[id] = undefined;

      noteDiv.replaceChild(titleDiv, noteDiv.children[0]);
      noteDiv.replaceChild(textDiv, noteDiv.children[1]);

      // Buttons
      var defBut = returnDefaultButtons(id);
      var buttonsP = noteDiv.children[2];
      buttonsP.innerHTML = '';
      buttonsP.appendChild(defBut.updateBut);
      buttonsP.appendChild(defBut.removeBut);
    }

    function updateButtonClick(id) {
      // show apply button and inputs instead of text
      var noteDiv = document.getElementById(id);
      var prevTitle = noteDiv.children[0].innerHTML;
      var prevText = noteDiv.children[1].innerHTML;

      var titleInput = document.createElement('input');
      titleInput.setAttribute('class', 'w3-input');
      titleInput.value = prevTitle;

      var textInput = document.createElement('input');
      textInput.setAttribute('class', 'w3-input');
      textInput.value = prevText;

      // Back up note
      backupNotes[id] = { title: prevTitle, text: prevText };

      noteDiv.replaceChild(titleInput, noteDiv.children[0]);
      noteDiv.replaceChild(textInput, noteDiv.children[1]);

      // Buttons
      var applyButton = document.createElement('button');
      applyButton.setAttribute('class', 'w3-btn w3-green');
      applyButton.setAttribute('onclick', 'sendUpdateNote("' + id + '");');
      applyButton.innerText = 'Apply';

      var cancelButton = document.createElement('button');
      cancelButton.setAttribute('class', 'w3-btn w3-red');
      cancelButton.setAttribute('onclick', 'cancelUpdateNote("' + id + '");');
      cancelButton.innerText = 'Cancel';


      var buttonsP = noteDiv.children[2];
      buttonsP.innerHTML = '';
      buttonsP.appendChild(applyButton);
      buttonsP.appendChild(cancelButton);
    }

    function deleteButtonClick(id) {
      var node = document.getElementById(id);
      node.parentNode.removeChild(node);
      var xhr = new XMLHttpRequest();
      xhr.open("POST", '/user/delnote', true);
      xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
      xhr.send('id=' + id);
    }

  </script>
  <script type="text/javascript">
    const lookForNewNoteTimeout = 1000;

    function parseUpdate(jsonData) {
      // Parse the json update data
      if (jsonData.updates)
        jsonData.updates.forEach(update => {
          // Look for that ID in your page
          var element = document.getElementById(update.id);
          if (element == null) {
            // Brand new, add to top
            addReceivedNote(update);
          } else {
            // Update previously generated
            // If it is under modification, replace backup
            if (backupNotes[update.id])
              backupNotes[update.id] = { title: update.title, text: update.text };
            else {
              element.children[0].innerText = update.title;
              element.children[1].innerText = update.text;
            }
          }
        });

      if (jsonData.deleted)
        jsonData.deleted.forEach(deletedElement => {
          var deleteNoteDiv = document.getElementById(deletedElement);
          if (deleteNoteDiv)
            deleteNoteDiv.parentNode.removeChild(deleteNoteDiv);
        });
    }

    // Background script
    function updateNotes() {
      // Query for changes as a json
      var xhr = new XMLHttpRequest();

      xhr.onreadystatechange = function () {
        if (this.readyState == 4 && this.status == 200) {
          var updatejson = JSON.parse(this.responseText);
          parseUpdate(updatejson);
        }
      };
      xhr.open("GET", '/user/updatenotes', true);
      xhr.send();
    }

    updateNotes();
    let timerId = setInterval(updateNotes, lookForNewNoteTimeout);
  </script>
</head>

<body>
  <div class="w3-bar w3-black w3-container">
    <div class="w3-bar-item w3-mobile">
      Welcome
      <%= username %>
    </div>
    <button onclick="createNewNote()" class="w3-bar-item w3-button w3-hover-green w3-mobile">New note</button>
    <a class="w3-bar-item w3-button w3-hover-red w3-mobile" href="/user/logout">Logout</a>
  </div>

  <div id="newnotediv" class="w3-panel w3-display-container" style="display: none;">
    <div class="w3-container w3-blue">
      <h2>Create new note</h2>
    </div>
    <div class="w3-container w3-card">
      <form action="javascript:sendNewNote(); hideNewNote();">
        <p>
          <label>Title</label>
          <input class="w3-input" type="text" placeholder="Title" id='newnotetitle'>
        </p>
        <p>
          <input class="w3-input" type="text" placeholder="Text" id="newnotetext">
        </p>
        <input type="submit" class="w3-button w3-green" value='Submit'>
        <span onclick="hideNewNote()" class="w3-button w3-red">Cancel</span>
      </form>

    </div>
  </div>

  <div id="mynotes" class="w3-container"></div>

</body>

</html>